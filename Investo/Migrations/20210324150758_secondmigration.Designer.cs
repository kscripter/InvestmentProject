// <auto-generated />
using System;
using Investo.Models.ApplicationContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Investo.Migrations
{
    [DbContext(typeof(InvestorDBContext))]
    [Migration("20210324150758_secondmigration")]
    partial class secondmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Investo.Models.Entities.Account", b =>
                {
                    b.Property<int>("InvestorId")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("text");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.HasKey("InvestorId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Investo.Models.Entities.BankDetails", b =>
                {
                    b.Property<int>("InvestorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .HasColumnType("text");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("InvestorId");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("Investo.Models.Entities.InvestmentType", b =>
                {
                    b.Property<int>("InvestorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Golden")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("InvestorId1")
                        .HasColumnType("int");

                    b.Property<int>("Mini")
                        .HasColumnType("int");

                    b.Property<int>("Royal")
                        .HasColumnType("int");

                    b.Property<int>("Ruby")
                        .HasColumnType("int");

                    b.Property<int>("Silver")
                        .HasColumnType("int");

                    b.HasKey("InvestorId");

                    b.HasIndex("InvestorId1");

                    b.ToTable("InvestmentTypes");
                });

            modelBuilder.Entity("Investo.Models.Entities.Investor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("InvestmentDuration")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int")
                        .HasMaxLength(11);

                    b.Property<string>("ReferralCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Investors");
                });

            modelBuilder.Entity("Investo.Models.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(72)")
                        .HasMaxLength(72);

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Investo.Models.Entities.Payment", b =>
                {
                    b.Property<int>("InvestorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ATMCard")
                        .HasColumnType("text");

                    b.Property<string>("BankTransfer")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("InvestorId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Investo.Models.Entities.TransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AmountInvested")
                        .HasColumnType("int");

                    b.Property<int>("AmountReturned")
                        .HasColumnType("int");

                    b.Property<string>("HistoryText")
                        .HasColumnType("text");

                    b.Property<int>("InvestorId")
                        .HasColumnType("int");

                    b.Property<int>("PendingReturns")
                        .HasColumnType("int");

                    b.Property<int>("TotalInvestment")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("TransactionHistorys");
                });

            modelBuilder.Entity("Investo.Models.Entities.Account", b =>
                {
                    b.HasOne("Investo.Models.Entities.Investor", "Investor")
                        .WithOne("Account")
                        .HasForeignKey("Investo.Models.Entities.Account", "InvestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Investo.Models.Entities.InvestmentType", b =>
                {
                    b.HasOne("Investo.Models.Entities.Investor", "Investor")
                        .WithMany("InvestmentTypes")
                        .HasForeignKey("InvestorId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
